{"version":3,"sources":["../../src/directive.js"],"names":["_gestures","_directions","tap","swipe","pan","pinch","press","rotate","isGesture","name","gestureName","toLowerCase","findIndex","item","isDirection","gesture","direction","getGestureWithDirection","split","event","readBinding","binding","arg","result","isString","getHandler","value","handler","isFunction","isObject","parameter","isArray","func","funcArguments","options","myOption","Object","assign","threshold","time","posThreshold","update","el","hammer","__hammer__","Error","isActive","off","on","bind","vNode","Manager","add","Swipe","data","attrs","option","defaultOption","capitalize","unbind","destroy"],"mappings":"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","file":"directive.js","sourcesContent":["\r\n/**\r\n *\r\n * @module * @author Bichi Kim [bichi@live.co.kr]\r\n * @copyright (c) Naree Co.\r\n * @license MIT\r\n */\r\nimport Hammer from 'hammerjs'\r\nimport _ from 'lodash'\r\n\r\n/**\r\n * data of gestures\r\n * @type {Array}\r\n * @private\r\n */\r\nconst _gestures = ['tap', 'pan', 'pinch', 'press', 'rotate', 'swipe']\r\n/**\r\n * data of directions\r\n * @type {Object}\r\n * @private\r\n */\r\nconst _directions = {\r\n  tap: [],\r\n  swipe: ['left', 'right', 'up', 'down'],\r\n  pan: ['start', 'move', 'end', 'cancel', 'left', 'right', 'up', 'down'],\r\n  pinch: ['start', 'move', 'end', 'cancel', 'in', 'out'],\r\n  press: ['up'],\r\n  rotate: ['start', 'move', 'end', 'cancel'],\r\n}\r\n/**\r\n * is name of gesture?\r\n * @param {String}name\r\n * @return {boolean}\r\n */\r\nconst isGesture = (name) => {\r\n  if(!name){\r\n    return false\r\n  }\r\n  const gestureName = name.toLowerCase()\r\n  return _.findIndex(_gestures, (item) => (item === gestureName)) >= 0\r\n}\r\n/**\r\n * is name of direction?\r\n * @param {String}gesture\r\n * @param {String}direction\r\n * @return {boolean}\r\n */\r\nconst isDirection = (gesture, direction) => {\r\n  return _.findIndex(_directions[gesture], (item) => (item === direction)) >= 0\r\n}\r\n/**\r\n * get gesture and event in string gesture-direction\r\n * @param {String}name\r\n * @return {{gesture, event}}\r\n */\r\nconst getGestureWithDirection = (name) => {\r\n  if(!name){\r\n    return {}\r\n  }\r\n  const [gesture, direction] = name.split('-')\r\n  if(!direction || !isGesture(gesture) || !isDirection(gesture, direction)){\r\n    return {}\r\n  }\r\n  return {gesture, event: `${gesture}${direction}`}\r\n}\r\n/**\r\n * get gesture and event\r\n * @param {Object}binding\r\n * @return {{gesture, event}}\r\n */\r\nconst readBinding = (binding) => {\r\n  let gesture, event\r\n  if(isGesture(binding.arg)){\r\n    gesture = binding.arg\r\n    event = binding.arg\r\n  }else{\r\n    const result = getGestureWithDirection(binding.arg)\r\n    gesture = result.gesture\r\n    event = result.event\r\n  }\r\n  if(_.isString(gesture)){\r\n    gesture.toLowerCase()\r\n  }\r\n  return {gesture, event}\r\n}\r\n/**\r\n * get Handler in binding value\r\n * @param {Object}binding\r\n * @return {Function|undefined}\r\n */\r\nconst getHandler = (binding) => {\r\n  const {value} = binding\r\n  let handler\r\n  if(_.isFunction(value)){\r\n    handler = value\r\n  }else if(_.isObject(value) && _.isFunction(value.handler)){\r\n    handler = () => {\r\n      value.handler(binding.value.parameter)\r\n    }\r\n  }else if(_.isArray(value)){\r\n    const [func, ...funcArguments] = value\r\n    handler = () => {\r\n      func(...funcArguments)\r\n    }\r\n  }else{\r\n    return\r\n  }\r\n  return handler\r\n}\r\n\r\n/**\r\n * directive logic\r\n * @param {Object}options\r\n * @return {{update, bind, unbind}}\r\n */\r\nexport default (options = {}) => {\r\n  const myOption = Object.assign({\r\n    tap: {threshold: 50, time: 600, posThreshold: 50},\r\n  }, options)\r\n  return {\r\n    // todo this is not working in Vue2\r\n    // see https://github.com/vuejs/vue/issues/3309 to support it\r\n    // acceptStatement: true,\r\n    update(el, binding){\r\n      const hammer = el.__hammer__\r\n      if(!hammer){\r\n        throw new Error(`[v-touch2] no hammer. hammer: ${hammer}`)\r\n      }\r\n      const {gesture, event} = readBinding(binding)\r\n      if(!gesture || !event){\r\n        return\r\n      }\r\n      const isActive = el[`__${gesture}__`]\r\n      if(!isActive){\r\n        return\r\n      }\r\n      hammer.off(event)\r\n      const handler = getHandler(binding)\r\n      if(!handler){\r\n        return\r\n      }\r\n      hammer.on(event, handler)\r\n    },\r\n    bind(el, binding, vNode){\r\n      const {gesture, event} = readBinding(binding)\r\n      if(!gesture || !event){\r\n        return\r\n      }\r\n      // hammer\r\n      if(!el.__hammer__){\r\n        el.__hammer__ = new Hammer.Manager(el)\r\n        // Owing to a Hammer bug I add this.\r\n        // In the Hammer without swipe environment, tap options is not working\r\n        el.__hammer__.add(new Hammer.Swipe())\r\n      }\r\n      const hammer = el.__hammer__\r\n      // handler\r\n      const handler = getHandler(binding)\r\n      if(!handler){\r\n        return\r\n      }\r\n      const {attrs = {}} = vNode.data\r\n      const option = attrs[`${gesture}-option`] || {}\r\n      const defaultOption = myOption[gesture] || {}\r\n      Object.assign(option, defaultOption)\r\n      // init Hammer\r\n      el[`__${gesture}__`] = true\r\n      hammer.add(new Hammer[_.capitalize(gesture)](option))\r\n      hammer.on(event, handler)\r\n    },\r\n    unbind(el){\r\n      if(el.__hammer__){\r\n        el.__hammer__.destroy()\r\n        el.__hammer__ = null\r\n      }\r\n    },\r\n  }\r\n}\r\n\r\n"]}